import React, { useState } from 'react';
import { View, Text, FlatList, Button, StyleSheet } from 'react-native';

const initialOffers = [
  { id: '1', title: 'Python Tutoring', user: 'Ali' },
  { id: '2', title: 'Guitar Lessons', user: 'Fatima' },
  { id: '3', title: 'Drawing Basics', user: 'Ahmed' },
  { id: '4', title: 'Yoga & Meditation', user: 'Sara' },
];

export default function HomeFeedScreen({ navigation }) {
  const [offers, setOffers] = useState(initialOffers);

  const renderOffer = ({ item }) => (
    <View style={styles.card}>
      <Text style={styles.title}>{item.title}</Text>
      <Text>By: {item.user}</Text>
    </View>
  );

  return (
    <View style={styles.container}>
      <Text style={styles.header}>Skill Offers</Text>

      <FlatList
        data={offers}
        keyExtractor={(item) => item.id}
        renderItem={renderOffer}
        contentContainerStyle={{ paddingBottom: 20 }}
      />

      <View style={styles.buttonRow}>
        <Button title="Create Post" onPress={() => navigation.navigate('CreatePost', { offers, setOffers })} />
        <Button title="Profile" onPress={() => navigation.navigate('Profile')} />
      </View>
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, padding: 20, backgroundColor: '#fff' },
  header: { fontSize: 24, fontWeight: 'bold', marginBottom: 15 },
  card: {
    backgroundColor: '#f0f0f0',
    padding: 15,
    marginBottom: 10,
    borderRadius: 8,
  },
  title: { fontSize: 18, fontWeight: '600' },
  buttonRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginTop: 20,
  },
});


import React from 'react';
import { View, Text, StyleSheet } from 'react-native';

const dummyUser = {
  name: 'Your Name',
  skills: ['React Native', 'Guitar', 'Photography'],
  bio: 'A passionate and hardworking developer and musician looking to share my skills with the world.',
};

export default function ProfileScreen() {
  return (
    <View style={styles.container}>
      <Text style={styles.name}>{dummyUser.name}</Text>

      <Text style={styles.sectionTitle}>Skills:</Text>
      {dummyUser.skills.map((skill, index) => (
        <Text key={index} style={styles.skillItem}>• {skill}</Text>
      ))}

      <Text style={styles.sectionTitle}>Bio:</Text>
      <Text style={styles.bio}>{dummyUser.bio}</Text>
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, padding: 20, backgroundColor: '#fff' },
  name: { fontSize: 28, fontWeight: 'bold', marginBottom: 20 },
  sectionTitle: { fontSize: 20, fontWeight: '600', marginTop: 20, marginBottom: 10 },
  skillItem: { fontSize: 16, marginLeft: 10, marginBottom: 5 },
  bio: { fontSize: 16, lineHeight: 22 },
});


import React, { useState } from 'react';
import { View, Text, TextInput, Button, StyleSheet, Alert } from 'react-native';

export default function LoginScreen({ navigation }) {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleLogin = () => {
    if (email === 'test@student.com' && password === '12345') {
      navigation.replace('Home'); // Navigate to Home and remove Login from stack
    } else {
      Alert.alert('Login Failed', 'Invalid email or password.');
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>SkillSwap Login</Text>

      <TextInput
        style={styles.input}
        placeholder="Email"
        keyboardType="email-address"
        autoCapitalize="none"
        value={email}
        onChangeText={setEmail}
      />

      <TextInput
        style={styles.input}
        placeholder="Password"
        secureTextEntry
        value={password}
        onChangeText={setPassword}
      />

      <Button title="Login" onPress={handleLogin} />
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, justifyContent: 'center', padding: 20, backgroundColor: '#fff' },
  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 20, textAlign: 'center' },
  input: {
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 8,
    padding: 12,
    marginBottom: 15,
    fontSize: 16,
  },
});

import React, { useState } from 'react';
import { View, Text, TextInput, Button, StyleSheet, Alert, KeyboardAvoidingView, Platform } from 'react-native';

export default function CreatePostScreen({ navigation, route }) {
  // ✅ Safe defaults to prevent undefined errors
  const offers = route?.params?.offers || [];
  const setOffers = route?.params?.setOffers || (() => {});

  const [newTitle, setNewTitle] = useState('');
  const [newUser, setNewUser] = useState('');

  const handleCreatePost = () => {
    if (newTitle.trim() === '' || newUser.trim() === '') {
      Alert.alert('Error', 'Please enter both a title and your name for the offer.');
      return;
    }

    // ✅ Generate a unique ID safely
    const newId = Date.now().toString();

    const newOffer = {
      id: newId,
      title: newTitle.trim(),
      user: newUser.trim(),
    };

    // ✅ Update offers only if setOffers is a real function
    if (typeof setOffers === 'function') {
      setOffers(prevOffers => [...prevOffers, newOffer]);
    }

    Alert.alert('Success', 'Your skill offer has been created!');
    navigation.goBack();
  };

  return (
    <KeyboardAvoidingView 
      style={styles.container} 
      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}
    >
      <Text style={styles.header}>Create New Skill Offer</Text>

      <TextInput
        style={styles.input}
        placeholder="Skill Offer Title (e.g., French Lessons)"
        value={newTitle}
        onChangeText={setNewTitle}
      />

      <TextInput
        style={styles.input}
        placeholder="Your Name"
        value={newUser}
        onChangeText={setNewUser}
      />

      <Button title="Submit Offer" onPress={handleCreatePost} />
    </KeyboardAvoidingView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: '#fff',
  },
  header: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
    textAlign: 'center',
  },
  input: {
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 8,
    padding: 12,
    marginBottom: 15,
    fontSize: 16,
  },
});
